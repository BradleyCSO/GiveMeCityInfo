@page
@using GiveMeCityInfo.Models;
@using Microsoft.AspNetCore.Http.Extensions
@model GiveMeCityInfo.Pages.CitiesModel
@{
    int pageNumber;

    if (!int.TryParse(HttpContext.Request.Query["PageNumber"], out pageNumber))
    {
        pageNumber = 1;
    }
}

<form method="get">
    <!-- Continents -->
    <div class="continents form-group">
        <!-- Populated via JS-->
    </div>

    <!-- Countries -->
    <div class="countries form-group">
        <select multiple class="form-control countries-select" name="SelectedCountries" id="country">
            @if (Model.SelectedCountries.Any())
            {
                foreach (var country in Model.SelectedCountries)
                {
                    <option selected="selected" value="@country">@country</option>
                }
            }
            @foreach (var country in Model?.Countries?.Except(Model.SelectedCountries) ?? new List<string>())
            {
                <option value="@country">@country</option>
            }
        </select>
    </div>

    <button id="submit" class="btn btn-primary" type="submit">Submit</button>
</form>

<div class="city-items container">
    @{
        var cities = Model?.Cities?.Cities;

        if (HttpContext.Request.Query.ContainsKey("SelectedCountries"))
        {
            cities = cities?.Where(c => HttpContext.Request.Query["SelectedCountries"].Any(selectedCountry => selectedCountry == c.country)).ToList();
        }

        foreach (var city in cities ?? new List<City>())
        {
            <p>@city?.name</p>
            <p>@city?.description</p>
        }
    }
</div>

@for (int i = 1; i <= Model?.Cities?.Pagination?.TotalPageCount; i++)
{
    // Encode query
    var query = new QueryBuilder();

    foreach (var country in Model.SelectedCountries)
    {
        query.Add("SelectedCountries", country);
    }
    query.Add("PageNumber", i.ToString());

    <a href="@query"
     class="paginationButtons btn btn-default @(i == pageNumber ? "active" : string.Empty)">
        @i
    </a>
}

<script src="js/queryWebAPI.js" asp-append-version="true"></script>
<script>
    document.querySelector("form").addEventListener("submit", function (event) {
        event.preventDefault();
    });

document.querySelectorAll('.paginationButtons').forEach(button => {
  button.addEventListener('click', event => {
    event.preventDefault();

    // Clear old styles
    document.querySelectorAll('.paginationButtons').forEach(b => b.classList.remove('active'));
    
    // Add active to current targeted pagination element
    event.currentTarget.classList.add('active');
  });
});

    let apiData;

    // Fetch on change of page is a legitimate API call
    fetch(`${baseURI}`)
        .then(response => response.json())
        .then(data => {
            apiData = data;
        })
        .catch(error => console.error('Unable to get cities.', error));

    // Remove submit button
    document.querySelector('#submit').remove();

    let make = [];

    const continents = {
        Europe: "Europe",
        NorthAmerica: "North America"
    }

    for (const continent in continents) {
        document.getElementsByClassName("continents")[0].innerHTML += `<label class="form-check-label">${continent}</label>`
        document.getElementsByClassName("continents")[0].innerHTML += `<input checked="checked" type="checkbox" class="form-check-input" name="continent" id="continent" value="${continent}"</input>`
    }

    document.addEventListener('change', function (e) {
        // Change list of cities, update "card" elements based on city selected
        if (e.target && e.target.id == 'continent') {
            // Clear old options
            removeAllChildNodes(document.querySelector(".countries-select"));

            // Clear old activity items
            removeAllChildNodes(document.querySelector(".city-items"));

            // When continent changes, get values of all checked continent items and push them to array
            let continents = []
            document.querySelectorAll('input[type=checkbox]:checked').forEach(element => continents.push(element.value))
            //console.log(continents)
            let results = []

            if (continents.length > 0) {
                // Update option values based on selected continent(s)
                results = apiData.filter(element => {
                    return element.continent.includes(continents)
                })
            }

            // Update Option elements
            for (let i = 0; i < results.length; i++) {
                document.getElementsByClassName("countries-select")[0].innerHTML += `<option value=${results[i].country} class="form-check-label">${results[i].country}</option>`
            }

            // Update City items
            for (let i = 0; i < results.length; i++) {
                document.getElementsByClassName("city-items")[0].innerHTML += `<p>${results[i].name}</p>`
            }
        }
    });

    function removeAllChildNodes(parent) {
        while (parent.firstChild) {
            parent.removeChild(parent.firstChild);
        }
    }

    // Fetch data as this element will only appear with JS enabled
    // This is to ensure that one API call is made when JS is enabled
    // And one API call is made when JS is disabled
    //if (document.getElementsByClassName("continents").length > 0)
    //{
    //    yo = getCities((data) => console.log({ data }))
    //}

    // one leisure makes api call o

    // Get querystring values
    //const urlSearchParams = new URLSearchParams(window.location.search);
    //const params = Object.fromEntries(urlSearchParams.entries());
    //console.log(params)

    // Elements
    const country = document.getElementById("country");

    // Fill the form fields with corresponding queryString values
    //updateFormFieldValue(continent)
    //updateFormFieldValue(country)

    // Add event listener(s) to fetch API if elements change
    //document.querySelectorAll('#continent').forEach(item => {
    //    item.addEventListener('click', event => {
    //    })
    //})
    //document.querySelectorAll('#country').forEach(item => {
    //    item.addEventListener('click', event => {
    //        console.log(item)
    //    })
    //})

    const select = document.getElementById('continent');
    //console.log(select)
    let apiVals;
    select.addEventListener('change', function handleChange(event) {
        //console.log(event.target.value);
        getCities(function (data) {

            apiVals = data;
        })
    })




    // Update elements
    //async function fetchAPIEvent(event, element) {
    //    //event.preventDefault()

    //    const checkboxes = document.querySelectorAll('input[type=checkbox]:checked')
    //    for (let i = 0; i < checkboxes.length; i++) {
    //        await make.push(getCitiesByContinent(checkboxes[i].value))
    //    }

    //    // Get fields
    //    let country = document.getElementById("country");

    //    // Empty them to make way for new values
    //    country.innerHTML = ""
    //    // Add the new ones
    //    for (let i = 0; i < make.length; i++) {
    //    }
    //}

    function createElement() {

    }
    // Update form field values based on query string values
    function updateFormFieldValue(element) {
        if (element.value == params["continent"] || params["country"]) {
            if (element.getAttribute("type") == 'checkbox') {
                element.checked = true
            }
            else {
                element.value = params["country"]
            }
        }
    }

</script>